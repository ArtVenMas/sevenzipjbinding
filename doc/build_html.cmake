cmake_policy(SET CMP0007 NEW)
SET(SNIPPETS_DIRECTORY "web/snippets")

macro(PROCESS_SNIPPET_LINE_JAVA LINE_VAR)
    STRING(REGEX REPLACE "//$" "" TMP "${${LINE_VAR}}")
    SET(${LINE_VAR} "${TMP}")
endmacro()

macro(PROCESS_SNIPPET_LINE_HTML LINE_VAR)
    STRING(REGEX REPLACE "&" "&amp;" TMP "${${LINE_VAR}}")
#    STRING(REGEX REPLACE " " "&nbsp;" TMP "${TMP}")
#    STRING(REGEX REPLACE "\t" "&nbsp;&nbsp;&nbsp;&nbsp;" TMP "${TMP}")
    STRING(REGEX REPLACE "(\"[^\"]+\")" "<span class=\"java-string\">\\1</span>" TMP "${TMP}")
    STRING(REGEX REPLACE "(int|long|new|void|return|break|private)" "<span class=\"java-keyword\">\\1</span>" TMP "${TMP}")
    STRING(REGEX REPLACE "(SevenZip\\.)(openInArchive)" "\\1<span class=\"java-staticmethod\">\\2</span>" TMP "${TMP}")
    STRING(REGEX REPLACE "(ArchiveFormat\\.)(ZIP)" "\\1<span class=\"java-staticfield\">\\2</span>" TMP "${TMP}")
    STRING(REGEX REPLACE "//$" "" TMP "${TMP}")
    STRING(REGEX REPLACE "(//.*)$" "<span class=\"java-comment\">\\1</span>" TMP "${TMP}")
#    MESSAGE("${TMP}")
    SET(${LINE_VAR} "${TMP}")
endmacro() 

macro(ADJUST_PADDING SNIPPET_FILE)
    SET(PADDING -1)
    file(STRINGS ${SNIPPET_FILE} SNIPPET_FILE_LINES)
    SET(SNIPPET_NAME "")
    LIST(LENGTH SNIPPET_FILE_LINES LINES_COUNT)
    MATH(EXPR LINES_COUNT "${LINES_COUNT}-1")
    FOREACH(INDEX RANGE ${LINES_COUNT})
        LIST(GET SNIPPET_FILE_LINES ${INDEX} LINE)
#        MESSAGE("LINE: ${LINE}")
        STRING(REPLACE "\t" "    " LINE "${LINE}")
        IF(NOT FIRST_LINE)
            SET(FIRST_LINE "${LINE}")
#            MESSAGE("FIRST_LINE: ${FIRST_LINE}")
            string(LENGTH "${LINE}" PADDING) 
        ELSE()
            IF(LINE)
                SET(I 0)
                SET(C1 "x")
                SET(C2 "x")
                WHILE("${C1}" STREQUAL "${C2}" )
                    STRING(SUBSTRING "${FIRST_LINE}" ${I} 1 C1)
                    STRING(SUBSTRING "${LINE}" ${I} 1 C2)
                    MATH(EXPR I "${I} + 1")
                ENDWHILE()
                MATH(EXPR I "${I} - 1")
            ENDIF()
        ENDIF()
    ENDFOREACH()
    FILE(WRITE "${SNIPPET_FILE}" "")
    FOREACH(INDEX RANGE ${LINES_COUNT})
        LIST(GET SNIPPET_FILE_LINES ${INDEX} LINE)
        IF (LINE)
            STRING(REPLACE "\t" "    " LINE "${LINE}")
            string(LENGTH "${LINE}" LENGTH)
            MATH(EXPR LENGTH "${LENGTH} - ${I}") 
            STRING(SUBSTRING "${LINE}" ${I} ${LENGTH} LINE)
            FILE(APPEND "${SNIPPET_FILE}" "${LINE}\n")
        ELSE()
            FILE(APPEND "${SNIPPET_FILE}" "${LINE}\n")
        ENDIF()
#        MESSAGE("${I}${LINE}")
    ENDFOREACH()
endmacro()


macro(PROCESS_SNIPPET SNIPPET_FILE)
    file(STRINGS ${SNIPPET_FILE} JAVA_FILE_LINES)
    SET(SNIPPET_NAME "")
    LIST(LENGTH JAVA_FILE_LINES LINES_COUNT)
    MATH(EXPR LINES_COUNT "${LINES_COUNT}-1")
    FOREACH(INDEX RANGE ${LINES_COUNT})
        LIST(GET JAVA_FILE_LINES ${INDEX} LINE)
        IF(LINE MATCHES "/\\* +END_SNIPPET +\\*/")
            ADJUST_PADDING("${SNIPPET_OUTPUT_FILENAME_HTML}")
            ADJUST_PADDING("${SNIPPET_OUTPUT_FILENAME_JAVA}")
            SET(SNIPPET_NAME "")
        ENDIF()
        IF(NOT SNIPPET_NAME STREQUAL "")
            SET(JAVA_LINE "${LINE}")
            SET(HTML_LINE "${LINE}")
            PROCESS_SNIPPET_LINE_JAVA(JAVA_LINE)
            FILE(APPEND ${SNIPPET_OUTPUT_FILENAME_JAVA} "${JAVA_LINE}")
            FILE(APPEND ${SNIPPET_OUTPUT_FILENAME_JAVA} "\n")

            PROCESS_SNIPPET_LINE_HTML(HTML_LINE)
            FILE(APPEND ${SNIPPET_OUTPUT_FILENAME_HTML} "${HTML_LINE}")
            FILE(APPEND ${SNIPPET_OUTPUT_FILENAME_HTML} "\n")
        ENDIF()
        IF(LINE MATCHES "/\\* +BEGIN_SNIPPET\\([a-zA-Z0-9]+\\) +\\*/")
            STRING(REGEX REPLACE ".*\\(([a-zA-Z0-9]+)\\).*" "\\1" SNIPPET_NAME ${LINE})
            MESSAGE("Found snippet: ${SNIPPET_NAME}")
            SET(SNIPPET_OUTPUT_FILENAME_HTML "${SNIPPETS_DIRECTORY}/${SNIPPET_NAME}.html")
            SET(SNIPPET_OUTPUT_FILENAME_JAVA "${SNIPPETS_DIRECTORY}/${SNIPPET_NAME}.java")
            FILE(WRITE ${SNIPPET_OUTPUT_FILENAME_HTML} "")
            FILE(WRITE ${SNIPPET_OUTPUT_FILENAME_JAVA} "")
        ENDIF()
    ENDFOREACH()
endmacro()

function(APPEND_FILE OUTPUT_FILE FILE_TO_APPEND)
    file(STRINGS ${FILE_TO_APPEND} FILE_LINES)
    SET(SNIPPET_NAME "")
    LIST(LENGTH FILE_LINES LINES_COUNT)
    MATH(EXPR LINES_COUNT "${LINES_COUNT}-1")
    FOREACH(INDEX RANGE ${LINES_COUNT})
        LIST(GET FILE_LINES ${INDEX} LINE)
        FILE(APPEND "${OUTPUT_FILE}" "${LINE}\n")
    ENDFOREACH()
endfunction()

macro(PROCESS_HTML FILENAME)
    MESSAGE("Processing HMTL: ${FILENAME}")
    SET(INPUT_HTML_FILE "web.components/${FILENAME}")
    SET(OUTPUT_HTML_FILE "web/${FILENAME}")

    file(STRINGS "${INPUT_HTML_FILE}" LINES)
    file(WRITE "${OUTPUT_HTML_FILE}" "")
    APPEND_FILE("${OUTPUT_HTML_FILE}" "web.components/header.html")
    FOREACH(LINE ${LINES})
        IF(LINE MATCHES "^[ \t]*##INCLUDE_SNIPPET\\([a-zA-Z0-9]+\\)[ \t]*$")
            STRING(REGEX REPLACE "^[ \t]*##INCLUDE_SNIPPET\\(([a-zA-Z0-9]+)\\)[ \t]*$" "\\1" SNIPPET_NAME ${LINE})
            MESSAGE("- including snippet: ${SNIPPET_NAME}")
            APPEND_FILE("${OUTPUT_HTML_FILE}" "web.components/snippet_header.html")
            APPEND_FILE("${OUTPUT_HTML_FILE}" "${SNIPPETS_DIRECTORY}/${SNIPPET_NAME}.html")
            APPEND_FILE("${OUTPUT_HTML_FILE}" "web.components/snippet_footer.html")
            FILE(APPEND "${OUTPUT_HTML_FILE}" "<div class=\"snippet-info\"><a href=\"snippets/${SNIPPET_NAME}.java\">download java code</a></div>\n")
        ELSE()
            FILE(APPEND "${OUTPUT_HTML_FILE}" "${LINE}\n")
        ENDIF()
    ENDFOREACH()
    APPEND_FILE("${OUTPUT_HTML_FILE}" "web.components/footer.html")
endmacro()

PROCESS_SNIPPET("../test/JavaTests/src/net/sf/sevenzipjbinding/junit/snippets/GetNumberOfItemInArchive.java")
PROCESS_HTML("index.html")
PROCESS_HTML("first_steps.html")