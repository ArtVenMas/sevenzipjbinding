
macro(PROCESS_SNIPPET_LINE LINE_VAR)
    STRING(REGEX REPLACE "&" "&amp;" TMP "${${LINE_VAR}}")
#    STRING(REGEX REPLACE " " "&nbsp;" TMP "${TMP}")
#    STRING(REGEX REPLACE "\t" "&nbsp;&nbsp;&nbsp;&nbsp;" TMP "${TMP}")
    STRING(REGEX REPLACE "(\"[^\"]+\")" "<span class=\"java-string\">\\1</span>" TMP "${TMP}")
    STRING(REGEX REPLACE "(int|long|new|void|return|break|private)" "<span class=\"java-keyword\">\\1</span>" TMP "${TMP}")
    MESSAGE("${TMP}")
    SET(${LINE_VAR} "${TMP}")
endmacro() 

macro(ADJUST_PADDING SNIPPET_FILE)
    file(STRINGS "${SNIPPET_FILE}" LINES)
    SET(PADDING -1)
    FOREACH(LINE ${LINES})
        STRING(REPLACE "\t" "    " LINE "${LINE}")
        IF(NOT FIRST_LINE)
            SET(FIRST_LINE "${LINE}")
#            MESSAGE("FIRST_LINE: ${FIRST_LINE}")
            string(LENGTH "${LINE}" PADDING) 
        ELSE()
#            MESSAGE("LINE: ${LINE}")
            IF(LINE)
                SET(I 0)
                SET(C1 "x")
                SET(C2 "x")
                WHILE("${C1}" STREQUAL "${C2}" )
                    STRING(SUBSTRING "${FIRST_LINE}" ${I} 1 C1)
                    STRING(SUBSTRING "${LINE}" ${I} 1 C2)
                    MATH(EXPR I "${I} + 1")
                ENDWHILE()
                MATH(EXPR I "${I} - 1")
            ENDIF()
        ENDIF()
    ENDFOREACH()
    FILE(WRITE "${SNIPPET_FILE}" "")
    FOREACH(LINE ${LINES})
        STRING(REPLACE "\t" "    " LINE "${LINE}")
        string(LENGTH "${LINE}" LENGTH)
        MATH(EXPR LENGTH "${LENGTH} - ${I}") 
        STRING(SUBSTRING "${LINE}" ${I} ${LENGTH} LINE)
        FILE(APPEND "${SNIPPET_FILE}" "${LINE}\n")
#        MESSAGE("${I}${LINE}")
    ENDFOREACH()
endmacro()


macro(PROCESS_SNIPPET SNIPPET_FILE)
    file(STRINGS ${SNIPPET_FILE} LINES)
    SET(SNIPPET_NAME "")
    FOREACH(LINE ${LINES})
        IF(LINE MATCHES "/\\* +END_SNIPPET +\\*/")
            ADJUST_PADDING("${SNIPPET_OUTPUT_FILENAME}")
            SET(SNIPPET_NAME "")
        ENDIF()
        IF(NOT SNIPPET_NAME STREQUAL "")
            PROCESS_SNIPPET_LINE(LINE)
            FILE(APPEND ${SNIPPET_OUTPUT_FILENAME} "${LINE}")
            FILE(APPEND ${SNIPPET_OUTPUT_FILENAME} "\n")
        ENDIF()
        IF(LINE MATCHES "/\\* +BEGIN_SNIPPET\\([a-zA-Z0-9]+\\) +\\*/")
            STRING(REGEX REPLACE ".*\\(([a-zA-Z0-9]+)\\).*" "\\1" SNIPPET_NAME ${LINE})
            MESSAGE("NAME: ${SNIPPET_NAME}")
            SET(SNIPPET_OUTPUT_FILENAME "web.components/snippets/${SNIPPET_NAME}.html")
            FILE(WRITE ${SNIPPET_OUTPUT_FILENAME} "")
        ENDIF()
    ENDFOREACH()
endmacro()

function(APPEND_FILE OUTPUT_FILE FILE_TO_APPEND)
    FILE(STRINGS "${FILE_TO_APPEND}" LINES)
    FOREACH(LINE ${LINES})
        FILE(APPEND "${OUTPUT_FILE}" "${LINE}\n")
    ENDFOREACH()
endfunction()

macro(PROCESS_HTML FILENAME)
    SET(INPUT_HTML_FILE "web.components/${FILENAME}")
    SET(OUTPUT_HTML_FILE "web/${FILENAME}")

    file(STRINGS "${INPUT_HTML_FILE}" LINES)
    file(WRITE "${OUTPUT_HTML_FILE}" "")
    APPEND_FILE("${OUTPUT_HTML_FILE}" "web.components/header.html")
    FOREACH(LINE ${LINES})
        IF(LINE MATCHES "^[ \t]*##INCLUDE_SNIPPET\\([a-zA-Z0-9]+\\)[ \t]*$")
            STRING(REGEX REPLACE "^[ \t]*##INCLUDE_SNIPPET\\(([a-zA-Z0-9]+)\\)[ \t]*$" "\\1" SNIPPET_NAME ${LINE})
            MESSAGE("Snippet: ${SNIPPET_NAME}")
            APPEND_FILE("${OUTPUT_HTML_FILE}" "web.components/snippet_header.html")
            APPEND_FILE("${OUTPUT_HTML_FILE}" "web.components/snippets/${SNIPPET_NAME}.html")
            APPEND_FILE("${OUTPUT_HTML_FILE}" "web.components/snippet_footer.html")
        ELSE()
            FILE(APPEND "${OUTPUT_HTML_FILE}" "${LINE}\n")
        ENDIF()
    ENDFOREACH()
    APPEND_FILE("${OUTPUT_HTML_FILE}" "web.components/footer.html")
endmacro()

PROCESS_SNIPPET("../test/JavaTests/src/net/sf/sevenzipjbinding/junit/snippets/GetNumberOfItemInArchive.java")
PROCESS_HTML("index.html")
PROCESS_HTML("first_steps.html")